# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    # Step 3: Set up Gradle 8.8 using gradle/actions/setup-gradle
    - name: Set up Gradle 8.8
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: '8.8'
        cache-disabled: false # Caching Gradle for faster builds

    # Step 4: Run Gradle build
    - name: Run build with Gradle
      run: ./gradlew clean build

    # Step 5: Run tests
    - name: Run tests
      run: ./gradlew test

    # Step 6 (Optional): Upload build artifacts (e.g., .jar or .war files)
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build/libs/*.jar  # Adjust according to your project structure
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: alhajcse/whatsapp
        tags: latest
        registry: registry-url.io
        dockerfile: Dockerfile.ci
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
